name: Generate PDFs on release

on:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          # Install a specific version of uv.
          version: "0.8.13"

      - name: Install kurra
        run: uv tool install kurra

      - name: Get chart version
        id: chart-version
        run: |
          echo version="$(kurra sparql chart.ttl 'select * where { <http://resource.geosciml.org/classifier/ics/ischart> <http://www.w3.org/2002/07/owl#versionInfo> ?o } limit 1' --response-format json \
          | python3 -c "import sys, ast, json; print(json.dumps(ast.literal_eval(sys.stdin.read())))" \
          | jq -r '.results.bindings[0].o.value')" >> $GITHUB_OUTPUT

      - uses: browser-actions/setup-chrome@v1
        id: setup-chrome

      - run: |
          echo ${{ steps.setup-chrome.outputs.chrome-path }}
          ${{ steps.setup-chrome.outputs.chrome-path }} --version

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo "starting"
          langs=$(curl https://stratigraphy.org/chart-data/chart.json | jq -r '.hasTopConcept | .. | .language?|select( . != null )'|sort -u)
          date=$(date '+%y.%m')
          version=$date # $(git describe --tags --abbrev=0 )
          echo $langs 
          echo $date 
          echo $version
          #get official version first
          ${{ steps.setup-chrome.outputs.chrome-path }} --user-data-dir=./chrome-temp-profile --headless --no-sandbox --disable-gpu --print-to-pdf=ICS_Chart_${{ steps.chart-version.outputs.version }}.pdf --no-pdf-header-footer --virtual-time-budget=5000 "https://stratigraphy.org/chart-data/?scale=print"
          for i in $langs
          do
            echo $i 
            output="ICS_Chart_${{ steps.chart-version.outputs.version }}-$i.pdf"
            echo "creating $output"
            #generate each language version
            echo "https://stratigraphy.org/chart-data/?scale=print&language=$i"
            ${{ steps.setup-chrome.outputs.chrome-path }} --user-data-dir=./chrome-temp-profile --headless --no-sandbox --disable-gpu --print-to-pdf=$output --no-pdf-header-footer --virtual-time-budget=5000 "https://stratigraphy.org/chart-data/?scale=print&language=$i"
            ls
          done

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: chart pdf
          path: "*.pdf"

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *.pdf
